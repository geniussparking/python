元组tuple的基本概念：
>>> a=('a','b','c','4')
>>> a
('a', 'b', 'c', '4')
>>> dir(a)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'count', 'index']
跟列表相比，元组是只读的，所以一个元组只有'count', 'index'这两个方法可以使用：
>>> a.index('a')
0
>>> a.count('b')
1
查看变量的类型：
>>> type(a)
<class 'tuple'>
元组和列表的相互转换：
>>> list(a)    #这里注意list()方法实际上没有改变a的类型，a还是元组，但是可以赋值给另外的变量
['a', 'b', 'c', '4']
>>> a
('a', 'b', 'c', '4')
>>> b=list(a)
>>> b
['a', 'b', 'c', '4']
>>> tuple(b)  #这里也是，实际上没有改变b的类型
('a', 'b', 'c', '4')
>>> d=tuple(b)
>>> d
('a', 'b', 'c', '4')
元组也可以切片，索引，但不能插入删除

运算符：//取整除
>>> 1/2
0.5
>>> 1//2
0
>>> 5/2
2.5
>>> 5//2
2

取模运算:返回余数，用来判断奇数偶数
>>> 10%3
1

幂运算：
>>> 2**8
256

位运算：
& 与运算
| 或运算
^ 异或运算
<< 左移一位
>> 右移一位

相当于把10和50都写成2进制，然后每一位进行运算
获取10的二进制，使用函数bin()
>>> bin(10)
'0b1010'
>>> bin(50)
'0b110010'
>>> bin(int(10))
'0b1010'
>>> num=10
>>> print(bin(num)[2:])
1010
50的二进制：110010
写成8位：
10：    00001010
50:     00110010
10&50 ：00000010  结果就是2 
10|50 ：00111010  结果就是58（在python中直接输入：0b111010既可得到00111010的十进制数字58）
10^50 : 00111000  结果就是56，异或的意思是，两个是不同的，得到的结果才是真
10<<1:  00010100  左移一位：结果是20
10>>1:  00000101  右移一位：结果是5
位运算的速度非常快，效率更高！
于是：
>>> 10&50  
2
>>> 10|50
58
>>> 10^50
56
>>> 10<<1
20
>>> 10>>1
5

if a and b:
if a not in b:   not in 成员运算符
if a or b:

>>> type(3) is int    is是身份运算符
True

>>> a
('a', 'b', 'c', '4')
>>> type(a) is tuple
True

continue 跳出本次循环，继续下一次循环
break 跳出本层循环

# -*- coding:utf-8 -*-
for j in range(5):
    for i in range(9):
        if i < 5:
            continue
        if j > 3:
            break
        print(i)
        
 打印的结果：
 
5
6
7
8
5
6
7
8
5
6
7
8
5
6
7
8




